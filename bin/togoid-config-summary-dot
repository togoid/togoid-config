#!/usr/bin/env ruby
#
# Usage:
#   togoid-config-summary config/*/*.yaml | togoid-config-summary-dot > togoid.dot
#   togoid-config-summary config/*/*.yaml | togoid-config-summary-dot --id > togoid.dot
#   dot -Kdot -Tpng togoid.dot -otogoid.png
#
# See also:
#   https://qiita.com/rubytomato@github/items/51779135bc4b77c8c20d
#

$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), '..', 'lib'))

require 'togoid-config'

# For extracting TogoID categories and colors
tio_nt = File.read(File.join(File.dirname(__FILE__), '..', 'ontology', 'togoid-ontology.nt'))
tio = TogoID::Ontology.new(tio_nt)

# Option to include identifiers for nodes/edges
if ARGV[0] == "--id"
  opt_id = true
  ARGV.shift
end

nodes = {}
edges = []

ARGF.gets # skip header line

ARGF.each do |line|
  ary = line.split(/\t/)
  s_id, t_id = ary[0].split('-')
  s_category = ary[2]
  s_label = ary[3]
  t_category = ary[6]
  t_label = ary[7]
  f_pred = ary[9]
  f_label = ary[10]
  r_pred = ary[12]
  r_label = ary[13]

  if opt_id
    s_name = "#{s_label}\n'#{s_id}'"
    t_name = "#{t_label}\n'#{t_id}'"
    f_name = "#{f_label}\n'#{f_pred}'"
    r_name = "#{r_label}\n'#{r_pred}'"
  else
    s_name = s_label
    t_name = t_label
    f_name = f_label
    r_name = r_label
  end

  nodes[s_name] = s_category
  nodes[t_name] = t_category
  edges << [ s_name, t_name, f_name , r_name]
end

puts 'digraph togoid {
  node [
    style = "filled",
    color = "white",
    fontname = "Migu 1M"
  ];
  edge [
    fontname = "Migu 1M",
    dir = "both"
  ];
'

puts

nodes.each do |node, category|
  puts %Q{  "#{node}" [fillcolor = "#{tio.color(category)}"] ;}
end

puts

edges.each do |ary|
  source, target, f_label, r_label = *ary
  if f_label == r_label
    label = f_label
  else
    label = f_label + "\n" + r_label
  end
  puts %Q{  "#{source}" -> "#{target}" [ label = "#{label}" ] ;}
end

puts '}'

$stderr.puts "Run: dot -Kdot -Tpng togoid.dot -otogoid.png (see README.md for details)"

